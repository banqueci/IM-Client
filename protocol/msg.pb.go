// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: protocol/msg.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 基本消息体
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd     uint32 `protobuf:"varint,1,opt,name=Cmd,proto3" json:"Cmd,omitempty"`
	Seq     uint64 `protobuf:"varint,2,opt,name=Seq,proto3" json:"Seq,omitempty"`
	Version uint32 `protobuf:"varint,3,opt,name=Version,proto3" json:"Version,omitempty"`
	// Types that are assignable to Body:
	//
	//	*Message_HeartMsg
	//	*Message_LoginMsg
	//	*Message_LogoutMsg
	//	*Message_ReceiptMsg
	//	*Message_OrderReceiptMsg
	//	*Message_RetractMsg
	//	*Message_RoomMember
	//	*Message_Room
	//	*Message_ImMsg
	//	*Message_PluginMsg
	//	*Message_OrderMsg
	//	*Message_OrderSaveMsg
	//	*Message_OrderCommand
	//	*Message_RelayMsg
	//	*Message_RoomMsg
	//	*Message_AuthTokenMsg
	//	*Message_AuthStatusMsg
	//	*Message_SystemMsg
	//	*Message_AppMsg
	//	*Message_ResultMsg
	//	*Message_AckMsg
	//	*Message_TransMsg
	//	*Message_StateMsg
	//	*Message_ModifyMsg
	//	*Message_RoomModifyMsg
	//	*Message_PushOrderMsg
	//	*Message_SyncKeyMsg
	//	*Message_RegisterMsg
	Body isMessage_Body `protobuf_oneof:"Body"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetCmd() uint32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *Message) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Message) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (m *Message) GetBody() isMessage_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Message) GetHeartMsg() *HeartBeatMessage {
	if x, ok := x.GetBody().(*Message_HeartMsg); ok {
		return x.HeartMsg
	}
	return nil
}

func (x *Message) GetLoginMsg() *LoginMessage {
	if x, ok := x.GetBody().(*Message_LoginMsg); ok {
		return x.LoginMsg
	}
	return nil
}

func (x *Message) GetLogoutMsg() *LogoutMessage {
	if x, ok := x.GetBody().(*Message_LogoutMsg); ok {
		return x.LogoutMsg
	}
	return nil
}

func (x *Message) GetReceiptMsg() *ReceiptMessage {
	if x, ok := x.GetBody().(*Message_ReceiptMsg); ok {
		return x.ReceiptMsg
	}
	return nil
}

func (x *Message) GetOrderReceiptMsg() *OrderReceiptMessage {
	if x, ok := x.GetBody().(*Message_OrderReceiptMsg); ok {
		return x.OrderReceiptMsg
	}
	return nil
}

func (x *Message) GetRetractMsg() *RetractMessage {
	if x, ok := x.GetBody().(*Message_RetractMsg); ok {
		return x.RetractMsg
	}
	return nil
}

func (x *Message) GetRoomMember() *RoomMember {
	if x, ok := x.GetBody().(*Message_RoomMember); ok {
		return x.RoomMember
	}
	return nil
}

func (x *Message) GetRoom() *Room {
	if x, ok := x.GetBody().(*Message_Room); ok {
		return x.Room
	}
	return nil
}

func (x *Message) GetImMsg() *IMMessage {
	if x, ok := x.GetBody().(*Message_ImMsg); ok {
		return x.ImMsg
	}
	return nil
}

func (x *Message) GetPluginMsg() *PluginMessage {
	if x, ok := x.GetBody().(*Message_PluginMsg); ok {
		return x.PluginMsg
	}
	return nil
}

func (x *Message) GetOrderMsg() *OrderMessage {
	if x, ok := x.GetBody().(*Message_OrderMsg); ok {
		return x.OrderMsg
	}
	return nil
}

func (x *Message) GetOrderSaveMsg() *OrderSaveMessage {
	if x, ok := x.GetBody().(*Message_OrderSaveMsg); ok {
		return x.OrderSaveMsg
	}
	return nil
}

func (x *Message) GetOrderCommand() *OrderCommand {
	if x, ok := x.GetBody().(*Message_OrderCommand); ok {
		return x.OrderCommand
	}
	return nil
}

func (x *Message) GetRelayMsg() *RelayMessage {
	if x, ok := x.GetBody().(*Message_RelayMsg); ok {
		return x.RelayMsg
	}
	return nil
}

func (x *Message) GetRoomMsg() *RoomMessage {
	if x, ok := x.GetBody().(*Message_RoomMsg); ok {
		return x.RoomMsg
	}
	return nil
}

func (x *Message) GetAuthTokenMsg() *AuthTokenMessage {
	if x, ok := x.GetBody().(*Message_AuthTokenMsg); ok {
		return x.AuthTokenMsg
	}
	return nil
}

func (x *Message) GetAuthStatusMsg() *AuthStatusMessage {
	if x, ok := x.GetBody().(*Message_AuthStatusMsg); ok {
		return x.AuthStatusMsg
	}
	return nil
}

func (x *Message) GetSystemMsg() *SystemMessage {
	if x, ok := x.GetBody().(*Message_SystemMsg); ok {
		return x.SystemMsg
	}
	return nil
}

func (x *Message) GetAppMsg() *AppMessage {
	if x, ok := x.GetBody().(*Message_AppMsg); ok {
		return x.AppMsg
	}
	return nil
}

func (x *Message) GetResultMsg() *ResultMessage {
	if x, ok := x.GetBody().(*Message_ResultMsg); ok {
		return x.ResultMsg
	}
	return nil
}

func (x *Message) GetAckMsg() *AckMessage {
	if x, ok := x.GetBody().(*Message_AckMsg); ok {
		return x.AckMsg
	}
	return nil
}

func (x *Message) GetTransMsg() *TransMessage {
	if x, ok := x.GetBody().(*Message_TransMsg); ok {
		return x.TransMsg
	}
	return nil
}

func (x *Message) GetStateMsg() *StateMessage {
	if x, ok := x.GetBody().(*Message_StateMsg); ok {
		return x.StateMsg
	}
	return nil
}

func (x *Message) GetModifyMsg() *ModifyMessage {
	if x, ok := x.GetBody().(*Message_ModifyMsg); ok {
		return x.ModifyMsg
	}
	return nil
}

func (x *Message) GetRoomModifyMsg() *RoomModify {
	if x, ok := x.GetBody().(*Message_RoomModifyMsg); ok {
		return x.RoomModifyMsg
	}
	return nil
}

func (x *Message) GetPushOrderMsg() *PushOrderMessage {
	if x, ok := x.GetBody().(*Message_PushOrderMsg); ok {
		return x.PushOrderMsg
	}
	return nil
}

func (x *Message) GetSyncKeyMsg() *SyncKeyMessage {
	if x, ok := x.GetBody().(*Message_SyncKeyMsg); ok {
		return x.SyncKeyMsg
	}
	return nil
}

func (x *Message) GetRegisterMsg() *RegisterMessage {
	if x, ok := x.GetBody().(*Message_RegisterMsg); ok {
		return x.RegisterMsg
	}
	return nil
}

type isMessage_Body interface {
	isMessage_Body()
}

type Message_HeartMsg struct {
	HeartMsg *HeartBeatMessage `protobuf:"bytes,4,opt,name=heartMsg,proto3,oneof"`
}

type Message_LoginMsg struct {
	LoginMsg *LoginMessage `protobuf:"bytes,5,opt,name=loginMsg,proto3,oneof"`
}

type Message_LogoutMsg struct {
	LogoutMsg *LogoutMessage `protobuf:"bytes,6,opt,name=logoutMsg,proto3,oneof"`
}

type Message_ReceiptMsg struct {
	ReceiptMsg *ReceiptMessage `protobuf:"bytes,7,opt,name=receiptMsg,proto3,oneof"`
}

type Message_OrderReceiptMsg struct {
	OrderReceiptMsg *OrderReceiptMessage `protobuf:"bytes,8,opt,name=orderReceiptMsg,proto3,oneof"`
}

type Message_RetractMsg struct {
	RetractMsg *RetractMessage `protobuf:"bytes,9,opt,name=retractMsg,proto3,oneof"`
}

type Message_RoomMember struct {
	RoomMember *RoomMember `protobuf:"bytes,10,opt,name=roomMember,proto3,oneof"`
}

type Message_Room struct {
	Room *Room `protobuf:"bytes,11,opt,name=room,proto3,oneof"`
}

type Message_ImMsg struct {
	ImMsg *IMMessage `protobuf:"bytes,12,opt,name=imMsg,proto3,oneof"`
}

type Message_PluginMsg struct {
	PluginMsg *PluginMessage `protobuf:"bytes,13,opt,name=pluginMsg,proto3,oneof"`
}

type Message_OrderMsg struct {
	OrderMsg *OrderMessage `protobuf:"bytes,14,opt,name=orderMsg,proto3,oneof"`
}

type Message_OrderSaveMsg struct {
	OrderSaveMsg *OrderSaveMessage `protobuf:"bytes,15,opt,name=orderSaveMsg,proto3,oneof"`
}

type Message_OrderCommand struct {
	OrderCommand *OrderCommand `protobuf:"bytes,16,opt,name=orderCommand,proto3,oneof"`
}

type Message_RelayMsg struct {
	RelayMsg *RelayMessage `protobuf:"bytes,17,opt,name=relayMsg,proto3,oneof"`
}

type Message_RoomMsg struct {
	RoomMsg *RoomMessage `protobuf:"bytes,18,opt,name=roomMsg,proto3,oneof"`
}

type Message_AuthTokenMsg struct {
	AuthTokenMsg *AuthTokenMessage `protobuf:"bytes,19,opt,name=authTokenMsg,proto3,oneof"`
}

type Message_AuthStatusMsg struct {
	AuthStatusMsg *AuthStatusMessage `protobuf:"bytes,20,opt,name=authStatusMsg,proto3,oneof"`
}

type Message_SystemMsg struct {
	SystemMsg *SystemMessage `protobuf:"bytes,21,opt,name=systemMsg,proto3,oneof"`
}

type Message_AppMsg struct {
	AppMsg *AppMessage `protobuf:"bytes,22,opt,name=appMsg,proto3,oneof"`
}

type Message_ResultMsg struct {
	ResultMsg *ResultMessage `protobuf:"bytes,23,opt,name=resultMsg,proto3,oneof"`
}

type Message_AckMsg struct {
	AckMsg *AckMessage `protobuf:"bytes,24,opt,name=ackMsg,proto3,oneof"`
}

type Message_TransMsg struct {
	TransMsg *TransMessage `protobuf:"bytes,25,opt,name=transMsg,proto3,oneof"`
}

type Message_StateMsg struct {
	StateMsg *StateMessage `protobuf:"bytes,26,opt,name=stateMsg,proto3,oneof"`
}

type Message_ModifyMsg struct {
	ModifyMsg *ModifyMessage `protobuf:"bytes,27,opt,name=modifyMsg,proto3,oneof"`
}

type Message_RoomModifyMsg struct {
	RoomModifyMsg *RoomModify `protobuf:"bytes,28,opt,name=roomModifyMsg,proto3,oneof"`
}

type Message_PushOrderMsg struct {
	PushOrderMsg *PushOrderMessage `protobuf:"bytes,29,opt,name=pushOrderMsg,proto3,oneof"`
}

type Message_SyncKeyMsg struct {
	SyncKeyMsg *SyncKeyMessage `protobuf:"bytes,30,opt,name=syncKeyMsg,proto3,oneof"`
}

type Message_RegisterMsg struct {
	RegisterMsg *RegisterMessage `protobuf:"bytes,31,opt,name=registerMsg,proto3,oneof"`
}

func (*Message_HeartMsg) isMessage_Body() {}

func (*Message_LoginMsg) isMessage_Body() {}

func (*Message_LogoutMsg) isMessage_Body() {}

func (*Message_ReceiptMsg) isMessage_Body() {}

func (*Message_OrderReceiptMsg) isMessage_Body() {}

func (*Message_RetractMsg) isMessage_Body() {}

func (*Message_RoomMember) isMessage_Body() {}

func (*Message_Room) isMessage_Body() {}

func (*Message_ImMsg) isMessage_Body() {}

func (*Message_PluginMsg) isMessage_Body() {}

func (*Message_OrderMsg) isMessage_Body() {}

func (*Message_OrderSaveMsg) isMessage_Body() {}

func (*Message_OrderCommand) isMessage_Body() {}

func (*Message_RelayMsg) isMessage_Body() {}

func (*Message_RoomMsg) isMessage_Body() {}

func (*Message_AuthTokenMsg) isMessage_Body() {}

func (*Message_AuthStatusMsg) isMessage_Body() {}

func (*Message_SystemMsg) isMessage_Body() {}

func (*Message_AppMsg) isMessage_Body() {}

func (*Message_ResultMsg) isMessage_Body() {}

func (*Message_AckMsg) isMessage_Body() {}

func (*Message_TransMsg) isMessage_Body() {}

func (*Message_StateMsg) isMessage_Body() {}

func (*Message_ModifyMsg) isMessage_Body() {}

func (*Message_RoomModifyMsg) isMessage_Body() {}

func (*Message_PushOrderMsg) isMessage_Body() {}

func (*Message_SyncKeyMsg) isMessage_Body() {}

func (*Message_RegisterMsg) isMessage_Body() {}

// 心跳包消息
type HeartBeatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartBeatMessage) Reset() {
	*x = HeartBeatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatMessage) ProtoMessage() {}

func (x *HeartBeatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatMessage.ProtoReflect.Descriptor instead.
func (*HeartBeatMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{1}
}

type RegisterMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=Addr,proto3" json:"Addr,omitempty"`
}

func (x *RegisterMessage) Reset() {
	*x = RegisterMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMessage) ProtoMessage() {}

func (x *RegisterMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMessage.ProtoReflect.Descriptor instead.
func (*RegisterMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterMessage) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

// 回执消息
type ReceiptMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender          string       `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver        string       `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	Relay           []*RelayInfo `protobuf:"bytes,7,rep,name=Relay,proto3" json:"Relay,omitempty"`
	MergeContent    string       `protobuf:"bytes,8,opt,name=MergeContent,proto3" json:"MergeContent,omitempty"`
	MsgId           uint64       `protobuf:"varint,9,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	MsgStatus       uint32       `protobuf:"varint,10,opt,name=MsgStatus,proto3" json:"MsgStatus,omitempty"`
	Timestamp       uint64       `protobuf:"varint,11,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	ServerTimestamp uint64       `protobuf:"varint,12,opt,name=ServerTimestamp,proto3" json:"ServerTimestamp,omitempty"`
	UniqueId        uint64       `protobuf:"varint,13,opt,name=UniqueId,proto3" json:"UniqueId,omitempty"`
}

func (x *ReceiptMessage) Reset() {
	*x = ReceiptMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptMessage) ProtoMessage() {}

func (x *ReceiptMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptMessage.ProtoReflect.Descriptor instead.
func (*ReceiptMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{3}
}

func (x *ReceiptMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ReceiptMessage) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *ReceiptMessage) GetRelay() []*RelayInfo {
	if x != nil {
		return x.Relay
	}
	return nil
}

func (x *ReceiptMessage) GetMergeContent() string {
	if x != nil {
		return x.MergeContent
	}
	return ""
}

func (x *ReceiptMessage) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *ReceiptMessage) GetMsgStatus() uint32 {
	if x != nil {
		return x.MsgStatus
	}
	return 0
}

func (x *ReceiptMessage) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ReceiptMessage) GetServerTimestamp() uint64 {
	if x != nil {
		return x.ServerTimestamp
	}
	return 0
}

func (x *ReceiptMessage) GetUniqueId() uint64 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

// 信令回执消息
type OrderReceiptMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *OrderReceiptMessage) Reset() {
	*x = OrderReceiptMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReceiptMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReceiptMessage) ProtoMessage() {}

func (x *OrderReceiptMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReceiptMessage.ProtoReflect.Descriptor instead.
func (*OrderReceiptMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{4}
}

func (x *OrderReceiptMessage) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrderReceiptMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 撤回消息
type RetractMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver string `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	MsgId    uint64 `protobuf:"varint,3,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
}

func (x *RetractMessage) Reset() {
	*x = RetractMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetractMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetractMessage) ProtoMessage() {}

func (x *RetractMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetractMessage.ProtoReflect.Descriptor instead.
func (*RetractMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{5}
}

func (x *RetractMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *RetractMessage) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *RetractMessage) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

// 房间成员消息
type RoomMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId     string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PlatformId uint32 `protobuf:"varint,3,opt,name=PlatformId,proto3" json:"PlatformId,omitempty"`
}

func (x *RoomMember) Reset() {
	*x = RoomMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomMember) ProtoMessage() {}

func (x *RoomMember) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomMember.ProtoReflect.Descriptor instead.
func (*RoomMember) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{6}
}

func (x *RoomMember) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomMember) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RoomMember) GetPlatformId() uint32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

// 房间消息
type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{7}
}

func (x *Room) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

// 登录认证
type LoginMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PlatformId uint32 `protobuf:"varint,2,opt,name=PlatformId,proto3" json:"PlatformId,omitempty"`
}

func (x *LoginMessage) Reset() {
	*x = LoginMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMessage) ProtoMessage() {}

func (x *LoginMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMessage.ProtoReflect.Descriptor instead.
func (*LoginMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{8}
}

func (x *LoginMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LoginMessage) GetPlatformId() uint32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

// 登出消息
type LogoutMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PlatformId uint32 `protobuf:"varint,2,opt,name=PlatformId,proto3" json:"PlatformId,omitempty"`
}

func (x *LogoutMessage) Reset() {
	*x = LogoutMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutMessage) ProtoMessage() {}

func (x *LogoutMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutMessage.ProtoReflect.Descriptor instead.
func (*LogoutMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{9}
}

func (x *LogoutMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LogoutMessage) GetPlatformId() uint32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

// IM消息
type IMMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender     string     `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver   string     `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	MsgId      uint64     `protobuf:"varint,3,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	MsgStatus  uint32     `protobuf:"varint,4,opt,name=MsgStatus,proto3" json:"MsgStatus,omitempty"`
	Retract    uint32     `protobuf:"varint,5,opt,name=Retract,proto3" json:"Retract,omitempty"`
	RelayTimes uint64     `protobuf:"varint,6,opt,name=RelayTimes,proto3" json:"RelayTimes,omitempty"`
	Timestamp  uint64     `protobuf:"varint,7,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Content    string     `protobuf:"bytes,8,opt,name=Content,proto3" json:"Content,omitempty"`
	Flag       uint32     `protobuf:"varint,9,opt,name=Flag,proto3" json:"Flag,omitempty"`
	UniqueId   uint64     `protobuf:"varint,10,opt,name=UniqueId,proto3" json:"UniqueId,omitempty"`
	RefMsg     *IMMessage `protobuf:"bytes,11,opt,name=RefMsg,proto3" json:"RefMsg,omitempty"`
	From       string     `protobuf:"bytes,12,opt,name=From,proto3" json:"From,omitempty"`
	To         string     `protobuf:"bytes,13,opt,name=To,proto3" json:"To,omitempty"`
	ThirdMsgId string     `protobuf:"bytes,14,opt,name=ThirdMsgId,proto3" json:"ThirdMsgId,omitempty"`
}

func (x *IMMessage) Reset() {
	*x = IMMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessage) ProtoMessage() {}

func (x *IMMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessage.ProtoReflect.Descriptor instead.
func (*IMMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{10}
}

func (x *IMMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *IMMessage) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *IMMessage) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *IMMessage) GetMsgStatus() uint32 {
	if x != nil {
		return x.MsgStatus
	}
	return 0
}

func (x *IMMessage) GetRetract() uint32 {
	if x != nil {
		return x.Retract
	}
	return 0
}

func (x *IMMessage) GetRelayTimes() uint64 {
	if x != nil {
		return x.RelayTimes
	}
	return 0
}

func (x *IMMessage) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *IMMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *IMMessage) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *IMMessage) GetUniqueId() uint64 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *IMMessage) GetRefMsg() *IMMessage {
	if x != nil {
		return x.RefMsg
	}
	return nil
}

func (x *IMMessage) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *IMMessage) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *IMMessage) GetThirdMsgId() string {
	if x != nil {
		return x.ThirdMsgId
	}
	return ""
}

// 自定义消息
type PluginMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   string `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver string `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	Type     uint32 `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`
	Command  string `protobuf:"bytes,4,opt,name=Command,proto3" json:"Command,omitempty"`
	Reply    uint32 `protobuf:"varint,5,opt,name=Reply,proto3" json:"Reply,omitempty"`
}

func (x *PluginMessage) Reset() {
	*x = PluginMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginMessage) ProtoMessage() {}

func (x *PluginMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginMessage.ProtoReflect.Descriptor instead.
func (*PluginMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{11}
}

func (x *PluginMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *PluginMessage) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *PluginMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PluginMessage) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *PluginMessage) GetReply() uint32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

// 信令消息
type OrderMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender       string        `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver     []string      `protobuf:"bytes,2,rep,name=Receiver,proto3" json:"Receiver,omitempty"`
	OrderCommand *OrderCommand `protobuf:"bytes,3,opt,name=OrderCommand,proto3" json:"OrderCommand,omitempty"`
	Type         uint32        `protobuf:"varint,4,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *OrderMessage) Reset() {
	*x = OrderMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderMessage) ProtoMessage() {}

func (x *OrderMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderMessage.ProtoReflect.Descriptor instead.
func (*OrderMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{12}
}

func (x *OrderMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *OrderMessage) GetReceiver() []string {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *OrderMessage) GetOrderCommand() *OrderCommand {
	if x != nil {
		return x.OrderCommand
	}
	return nil
}

func (x *OrderMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 信令保存消息
type OrderSaveMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderUserId string        `protobuf:"bytes,1,opt,name=SenderUserId,proto3" json:"SenderUserId,omitempty"`
	Receiver     []string      `protobuf:"bytes,2,rep,name=Receiver,proto3" json:"Receiver,omitempty"`
	OrderCmd     *OrderCommand `protobuf:"bytes,3,opt,name=OrderCmd,proto3" json:"OrderCmd,omitempty"`
	Reply        uint32        `protobuf:"varint,4,opt,name=Reply,proto3" json:"Reply,omitempty"`
}

func (x *OrderSaveMessage) Reset() {
	*x = OrderSaveMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSaveMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSaveMessage) ProtoMessage() {}

func (x *OrderSaveMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSaveMessage.ProtoReflect.Descriptor instead.
func (*OrderSaveMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{13}
}

func (x *OrderSaveMessage) GetSenderUserId() string {
	if x != nil {
		return x.SenderUserId
	}
	return ""
}

func (x *OrderSaveMessage) GetReceiver() []string {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *OrderSaveMessage) GetOrderCmd() *OrderCommand {
	if x != nil {
		return x.OrderCmd
	}
	return nil
}

func (x *OrderSaveMessage) GetReply() uint32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

type OrderCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag     uint32   `protobuf:"varint,1,opt,name=Flag,proto3" json:"Flag,omitempty"`
	CallUser []string `protobuf:"bytes,2,rep,name=CallUser,proto3" json:"CallUser,omitempty"`
	Room     string   `protobuf:"bytes,3,opt,name=Room,proto3" json:"Room,omitempty"`
	Group    string   `protobuf:"bytes,4,opt,name=Group,proto3" json:"Group,omitempty"`
	Reply    uint32   `protobuf:"varint,5,opt,name=Reply,proto3" json:"Reply,omitempty"`
	Command  string   `protobuf:"bytes,6,opt,name=Command,proto3" json:"Command,omitempty"`
}

func (x *OrderCommand) Reset() {
	*x = OrderCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCommand) ProtoMessage() {}

func (x *OrderCommand) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCommand.ProtoReflect.Descriptor instead.
func (*OrderCommand) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{14}
}

func (x *OrderCommand) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *OrderCommand) GetCallUser() []string {
	if x != nil {
		return x.CallUser
	}
	return nil
}

func (x *OrderCommand) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *OrderCommand) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *OrderCommand) GetReply() uint32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

func (x *OrderCommand) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

// 转发消息
type RelayMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retract        uint32            `protobuf:"varint,1,opt,name=Retract,proto3" json:"Retract,omitempty"`
	Type           uint32            `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Sender         string            `protobuf:"bytes,3,opt,name=Sender,proto3" json:"Sender,omitempty"`
	MessageByPeer  []*RelayUserInfo  `protobuf:"bytes,4,rep,name=MessageByPeer,proto3" json:"MessageByPeer,omitempty"`   //原消息发送方 原消息接收方 原消息id
	MessageByGroup []*RelayGroupInfo `protobuf:"bytes,5,rep,name=MessageByGroup,proto3" json:"MessageByGroup,omitempty"` //原消息发送方 原消息接收方 原消息id
	ReceiverPeer   []string          `protobuf:"bytes,6,rep,name=ReceiverPeer,proto3" json:"ReceiverPeer,omitempty"`     //接收者单人数组
	ReceiverGroup  []string          `protobuf:"bytes,7,rep,name=ReceiverGroup,proto3" json:"ReceiverGroup,omitempty"`   //接收者群数组
	Timestamp      uint64            `protobuf:"varint,8,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	UniqueId       uint64            `protobuf:"varint,9,opt,name=UniqueId,proto3" json:"UniqueId,omitempty"`
}

func (x *RelayMessage) Reset() {
	*x = RelayMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayMessage) ProtoMessage() {}

func (x *RelayMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayMessage.ProtoReflect.Descriptor instead.
func (*RelayMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{15}
}

func (x *RelayMessage) GetRetract() uint32 {
	if x != nil {
		return x.Retract
	}
	return 0
}

func (x *RelayMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RelayMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *RelayMessage) GetMessageByPeer() []*RelayUserInfo {
	if x != nil {
		return x.MessageByPeer
	}
	return nil
}

func (x *RelayMessage) GetMessageByGroup() []*RelayGroupInfo {
	if x != nil {
		return x.MessageByGroup
	}
	return nil
}

func (x *RelayMessage) GetReceiverPeer() []string {
	if x != nil {
		return x.ReceiverPeer
	}
	return nil
}

func (x *RelayMessage) GetReceiverGroup() []string {
	if x != nil {
		return x.ReceiverGroup
	}
	return nil
}

func (x *RelayMessage) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RelayMessage) GetUniqueId() uint64 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

// 房间消息
type RoomMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver  string `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	Timestamp uint64 `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Content   string `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *RoomMessage) Reset() {
	*x = RoomMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomMessage) ProtoMessage() {}

func (x *RoomMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomMessage.ProtoReflect.Descriptor instead.
func (*RoomMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{16}
}

func (x *RoomMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *RoomMessage) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *RoomMessage) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RoomMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Token验证 C->S
type AuthTokenMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PlatformId uint32 `protobuf:"varint,2,opt,name=PlatformId,proto3" json:"PlatformId,omitempty"`
}

func (x *AuthTokenMessage) Reset() {
	*x = AuthTokenMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthTokenMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthTokenMessage) ProtoMessage() {}

func (x *AuthTokenMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthTokenMessage.ProtoReflect.Descriptor instead.
func (*AuthTokenMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{17}
}

func (x *AuthTokenMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuthTokenMessage) GetPlatformId() uint32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

// Token验证状态 S->C
type AuthStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Status uint32 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *AuthStatusMessage) Reset() {
	*x = AuthStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthStatusMessage) ProtoMessage() {}

func (x *AuthStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthStatusMessage.ProtoReflect.Descriptor instead.
func (*AuthStatusMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{18}
}

func (x *AuthStatusMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuthStatusMessage) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AckMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq uint64 `protobuf:"varint,1,opt,name=Seq,proto3" json:"Seq,omitempty"`
}

func (x *AckMessage) Reset() {
	*x = AckMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessage) ProtoMessage() {}

func (x *AckMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessage.ProtoReflect.Descriptor instead.
func (*AckMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{19}
}

func (x *AckMessage) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type SyncKeyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncKey uint64 `protobuf:"varint,1,opt,name=SyncKey,proto3" json:"SyncKey,omitempty"`
}

func (x *SyncKeyMessage) Reset() {
	*x = SyncKeyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncKeyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncKeyMessage) ProtoMessage() {}

func (x *SyncKeyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncKeyMessage.ProtoReflect.Descriptor instead.
func (*SyncKeyMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{20}
}

func (x *SyncKeyMessage) GetSyncKey() uint64 {
	if x != nil {
		return x.SyncKey
	}
	return 0
}

// 系统消息
type SystemMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender      string `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver    string `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	SystemMsgId uint64 `protobuf:"varint,7,opt,name=SystemMsgId,proto3" json:"SystemMsgId,omitempty"`
	MsgId       uint64 `protobuf:"varint,8,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	Timestamp   uint64 `protobuf:"varint,9,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Content     string `protobuf:"bytes,10,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *SystemMessage) Reset() {
	*x = SystemMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMessage) ProtoMessage() {}

func (x *SystemMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMessage.ProtoReflect.Descriptor instead.
func (*SystemMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{21}
}

func (x *SystemMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *SystemMessage) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *SystemMessage) GetSystemMsgId() uint64 {
	if x != nil {
		return x.SystemMsgId
	}
	return 0
}

func (x *SystemMessage) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *SystemMessage) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SystemMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AppMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender     string   `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver   string   `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	PlatformId uint32   `protobuf:"varint,3,opt,name=PlatformId,proto3" json:"PlatformId,omitempty"`
	Addr       string   `protobuf:"bytes,4,opt,name=Addr,proto3" json:"Addr,omitempty"`
	Message    *Message `protobuf:"bytes,5,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *AppMessage) Reset() {
	*x = AppMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage) ProtoMessage() {}

func (x *AppMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage.ProtoReflect.Descriptor instead.
func (*AppMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{22}
}

func (x *AppMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *AppMessage) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *AppMessage) GetPlatformId() uint32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *AppMessage) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *AppMessage) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ResultMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *ResultMessage) Reset() {
	*x = ResultMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultMessage) ProtoMessage() {}

func (x *ResultMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultMessage.ProtoReflect.Descriptor instead.
func (*ResultMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{23}
}

func (x *ResultMessage) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResultMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type TransMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      uint32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Sender    string `protobuf:"bytes,2,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver  string `protobuf:"bytes,3,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	Timestamp uint64 `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Content   string `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *TransMessage) Reset() {
	*x = TransMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransMessage) ProtoMessage() {}

func (x *TransMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransMessage.ProtoReflect.Descriptor instead.
func (*TransMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{24}
}

func (x *TransMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TransMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *TransMessage) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *TransMessage) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type StateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	State  string `protobuf:"bytes,2,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *StateMessage) Reset() {
	*x = StateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateMessage) ProtoMessage() {}

func (x *StateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateMessage.ProtoReflect.Descriptor instead.
func (*StateMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{25}
}

func (x *StateMessage) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *StateMessage) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type ModifyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Sender   string `protobuf:"bytes,2,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver string `protobuf:"bytes,3,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	Key      string `protobuf:"bytes,4,opt,name=Key,proto3" json:"Key,omitempty"`
	Value    string `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ModifyMessage) Reset() {
	*x = ModifyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMessage) ProtoMessage() {}

func (x *ModifyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMessage.ProtoReflect.Descriptor instead.
func (*ModifyMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{26}
}

func (x *ModifyMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ModifyMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ModifyMessage) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *ModifyMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ModifyMessage) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ModifyType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ModifyType) Reset() {
	*x = ModifyType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyType) ProtoMessage() {}

func (x *ModifyType) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyType.ProtoReflect.Descriptor instead.
func (*ModifyType) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{27}
}

func (x *ModifyType) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ModifyType) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ModifyType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RoomModify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string      `protobuf:"bytes,3,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	Modify *ModifyType `protobuf:"bytes,4,opt,name=modify,proto3" json:"modify,omitempty"`
}

func (x *RoomModify) Reset() {
	*x = RoomModify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomModify) ProtoMessage() {}

func (x *RoomModify) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomModify.ProtoReflect.Descriptor instead.
func (*RoomModify) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{28}
}

func (x *RoomModify) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomModify) GetModify() *ModifyType {
	if x != nil {
		return x.Modify
	}
	return nil
}

type PushOrderMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string   `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver  string   `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	Status    uint32   `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	Timestamp uint64   `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Message   *Message `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PushOrderMessage) Reset() {
	*x = PushOrderMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushOrderMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushOrderMessage) ProtoMessage() {}

func (x *PushOrderMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushOrderMessage.ProtoReflect.Descriptor instead.
func (*PushOrderMessage) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{29}
}

func (x *PushOrderMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *PushOrderMessage) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *PushOrderMessage) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PushOrderMessage) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PushOrderMessage) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// 单聊消息转发源消息信息
type RelayUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender         string `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Receiver       string `protobuf:"bytes,2,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	MsgId          uint64 `protobuf:"varint,3,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	SenderName     string `protobuf:"bytes,4,opt,name=SenderName,proto3" json:"SenderName,omitempty"`
	SenderAvatar   string `protobuf:"bytes,5,opt,name=SenderAvatar,proto3" json:"SenderAvatar,omitempty"`
	ReceiverName   string `protobuf:"bytes,6,opt,name=ReceiverName,proto3" json:"ReceiverName,omitempty"`
	ReceiverAvatar string `protobuf:"bytes,7,opt,name=ReceiverAvatar,proto3" json:"ReceiverAvatar,omitempty"`
}

func (x *RelayUserInfo) Reset() {
	*x = RelayUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayUserInfo) ProtoMessage() {}

func (x *RelayUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayUserInfo.ProtoReflect.Descriptor instead.
func (*RelayUserInfo) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{30}
}

func (x *RelayUserInfo) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *RelayUserInfo) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *RelayUserInfo) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *RelayUserInfo) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *RelayUserInfo) GetSenderAvatar() string {
	if x != nil {
		return x.SenderAvatar
	}
	return ""
}

func (x *RelayUserInfo) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *RelayUserInfo) GetReceiverAvatar() string {
	if x != nil {
		return x.ReceiverAvatar
	}
	return ""
}

// 群聊消息转发源消息信息
type RelayGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender       string `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	ReceiverGid  string `protobuf:"bytes,2,opt,name=ReceiverGid,proto3" json:"ReceiverGid,omitempty"`
	MsgId        uint64 `protobuf:"varint,3,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	SenderName   string `protobuf:"bytes,4,opt,name=SenderName,proto3" json:"SenderName,omitempty"`
	SenderAvatar string `protobuf:"bytes,5,opt,name=SenderAvatar,proto3" json:"SenderAvatar,omitempty"`
}

func (x *RelayGroupInfo) Reset() {
	*x = RelayGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayGroupInfo) ProtoMessage() {}

func (x *RelayGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayGroupInfo.ProtoReflect.Descriptor instead.
func (*RelayGroupInfo) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{31}
}

func (x *RelayGroupInfo) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *RelayGroupInfo) GetReceiverGid() string {
	if x != nil {
		return x.ReceiverGid
	}
	return ""
}

func (x *RelayGroupInfo) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *RelayGroupInfo) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *RelayGroupInfo) GetSenderAvatar() string {
	if x != nil {
		return x.SenderAvatar
	}
	return ""
}

// 转发消息回执消息信息
type RelayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldReceiver     string `protobuf:"bytes,1,opt,name=OldReceiver,proto3" json:"OldReceiver,omitempty"`
	OldMsgId        uint64 `protobuf:"varint,2,opt,name=OldMsgId,proto3" json:"OldMsgId,omitempty"`
	NewReceiver     string `protobuf:"bytes,3,opt,name=NewReceiver,proto3" json:"NewReceiver,omitempty"`
	NewMsgId        uint64 `protobuf:"varint,4,opt,name=NewMsgId,proto3" json:"NewMsgId,omitempty"`
	NewReceiverType uint32 `protobuf:"varint,5,opt,name=NewReceiverType,proto3" json:"NewReceiverType,omitempty"`
}

func (x *RelayInfo) Reset() {
	*x = RelayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_msg_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayInfo) ProtoMessage() {}

func (x *RelayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_msg_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayInfo.ProtoReflect.Descriptor instead.
func (*RelayInfo) Descriptor() ([]byte, []int) {
	return file_protocol_msg_proto_rawDescGZIP(), []int{32}
}

func (x *RelayInfo) GetOldReceiver() string {
	if x != nil {
		return x.OldReceiver
	}
	return ""
}

func (x *RelayInfo) GetOldMsgId() uint64 {
	if x != nil {
		return x.OldMsgId
	}
	return 0
}

func (x *RelayInfo) GetNewReceiver() string {
	if x != nil {
		return x.NewReceiver
	}
	return ""
}

func (x *RelayInfo) GetNewMsgId() uint64 {
	if x != nil {
		return x.NewMsgId
	}
	return 0
}

func (x *RelayInfo) GetNewReceiverType() uint32 {
	if x != nil {
		return x.NewReceiverType
	}
	return 0
}

var File_protocol_msg_proto protoreflect.FileDescriptor

var file_protocol_msg_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6d, 0x73, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xfb, 0x0c,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x43, 0x6d, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53,
	0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x53, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x68, 0x65, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x67,
	0x12, 0x33, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4d,
	0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x39, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x48, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4d,
	0x73, 0x67, 0x12, 0x39, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x73, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x35, 0x0a,
	0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x48, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x6d, 0x4d,
	0x73, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05,
	0x69, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d,
	0x73, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x33, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d,
	0x73, 0x67, 0x12, 0x3f, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x4d,
	0x73, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65,
	0x4d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x48, 0x00, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x4d, 0x73, 0x67, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x6c,
	0x61, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x4d, 0x73, 0x67,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x42, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x61,
	0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x09,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4d, 0x73, 0x67, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41,
	0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x61, 0x70, 0x70,
	0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x06, 0x61,
	0x63, 0x6b, 0x4d, 0x73, 0x67, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x06, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x4d, 0x73, 0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x4d, 0x73, 0x67, 0x12,
	0x33, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x73,
	0x67, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x0d,
	0x72, 0x6f, 0x6f, 0x6d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x6f, 0x6f, 0x6d,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x0c, 0x70, 0x75, 0x73,
	0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x75,
	0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x79,
	0x6e, 0x63, 0x4b, 0x65, 0x79, 0x4d, 0x73, 0x67, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x4b,
	0x65, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x3c, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x42, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x12, 0x0a, 0x10, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x25, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x41, 0x64, 0x64, 0x72, 0x22, 0xaa, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x05, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x73, 0x67, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x28, 0x0a,
	0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67,
	0x22, 0x5a, 0x0a, 0x0e, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x0a,
	0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x04, 0x52, 0x6f,
	0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0c, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x22, 0x47, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x22, 0x85, 0x03, 0x0a, 0x09,
	0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x52, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x4d, 0x73, 0x67, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x52, 0x65, 0x66, 0x4d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x54, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x68, 0x69, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x68, 0x69, 0x72, 0x64, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x91, 0x01,
	0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x39, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x9b, 0x01, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x98, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xd7, 0x02, 0x0a, 0x0c, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52,
	0x65, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x52, 0x65,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x3c, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x50, 0x65,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x50, 0x65, 0x65, 0x72, 0x12,
	0x3f, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x55, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x0b, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x4a, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x41,
	0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x53, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x53, 0x65, 0x71,
	0x22, 0x2a, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x65, 0x79, 0x22, 0xb3, 0x01, 0x0a,
	0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d,
	0x73, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2a, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0x8e, 0x01, 0x0a,
	0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x0a,
	0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x7f, 0x0a, 0x0d, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x0a,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x51, 0x0a, 0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x22, 0xa8, 0x01, 0x0a, 0x10, 0x50, 0x75,
	0x73, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xe9, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x47, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x47, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xb1, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x61,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x6c, 0x64, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x6c, 0x64, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x4f, 0x6c, 0x64, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x4e, 0x65, 0x77, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x4e, 0x65, 0x77, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2e,
	0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protocol_msg_proto_rawDescOnce sync.Once
	file_protocol_msg_proto_rawDescData = file_protocol_msg_proto_rawDesc
)

func file_protocol_msg_proto_rawDescGZIP() []byte {
	file_protocol_msg_proto_rawDescOnce.Do(func() {
		file_protocol_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_msg_proto_rawDescData)
	})
	return file_protocol_msg_proto_rawDescData
}

var file_protocol_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_protocol_msg_proto_goTypes = []interface{}{
	(*Message)(nil),             // 0: message.Message
	(*HeartBeatMessage)(nil),    // 1: message.HeartBeatMessage
	(*RegisterMessage)(nil),     // 2: message.RegisterMessage
	(*ReceiptMessage)(nil),      // 3: message.ReceiptMessage
	(*OrderReceiptMessage)(nil), // 4: message.OrderReceiptMessage
	(*RetractMessage)(nil),      // 5: message.RetractMessage
	(*RoomMember)(nil),          // 6: message.RoomMember
	(*Room)(nil),                // 7: message.Room
	(*LoginMessage)(nil),        // 8: message.LoginMessage
	(*LogoutMessage)(nil),       // 9: message.LogoutMessage
	(*IMMessage)(nil),           // 10: message.IMMessage
	(*PluginMessage)(nil),       // 11: message.PluginMessage
	(*OrderMessage)(nil),        // 12: message.OrderMessage
	(*OrderSaveMessage)(nil),    // 13: message.OrderSaveMessage
	(*OrderCommand)(nil),        // 14: message.OrderCommand
	(*RelayMessage)(nil),        // 15: message.RelayMessage
	(*RoomMessage)(nil),         // 16: message.RoomMessage
	(*AuthTokenMessage)(nil),    // 17: message.AuthTokenMessage
	(*AuthStatusMessage)(nil),   // 18: message.AuthStatusMessage
	(*AckMessage)(nil),          // 19: message.AckMessage
	(*SyncKeyMessage)(nil),      // 20: message.SyncKeyMessage
	(*SystemMessage)(nil),       // 21: message.SystemMessage
	(*AppMessage)(nil),          // 22: message.AppMessage
	(*ResultMessage)(nil),       // 23: message.ResultMessage
	(*TransMessage)(nil),        // 24: message.TransMessage
	(*StateMessage)(nil),        // 25: message.StateMessage
	(*ModifyMessage)(nil),       // 26: message.ModifyMessage
	(*ModifyType)(nil),          // 27: message.ModifyType
	(*RoomModify)(nil),          // 28: message.RoomModify
	(*PushOrderMessage)(nil),    // 29: message.PushOrderMessage
	(*RelayUserInfo)(nil),       // 30: message.RelayUserInfo
	(*RelayGroupInfo)(nil),      // 31: message.RelayGroupInfo
	(*RelayInfo)(nil),           // 32: message.RelayInfo
}
var file_protocol_msg_proto_depIdxs = []int32{
	1,  // 0: message.Message.heartMsg:type_name -> message.HeartBeatMessage
	8,  // 1: message.Message.loginMsg:type_name -> message.LoginMessage
	9,  // 2: message.Message.logoutMsg:type_name -> message.LogoutMessage
	3,  // 3: message.Message.receiptMsg:type_name -> message.ReceiptMessage
	4,  // 4: message.Message.orderReceiptMsg:type_name -> message.OrderReceiptMessage
	5,  // 5: message.Message.retractMsg:type_name -> message.RetractMessage
	6,  // 6: message.Message.roomMember:type_name -> message.RoomMember
	7,  // 7: message.Message.room:type_name -> message.Room
	10, // 8: message.Message.imMsg:type_name -> message.IMMessage
	11, // 9: message.Message.pluginMsg:type_name -> message.PluginMessage
	12, // 10: message.Message.orderMsg:type_name -> message.OrderMessage
	13, // 11: message.Message.orderSaveMsg:type_name -> message.OrderSaveMessage
	14, // 12: message.Message.orderCommand:type_name -> message.OrderCommand
	15, // 13: message.Message.relayMsg:type_name -> message.RelayMessage
	16, // 14: message.Message.roomMsg:type_name -> message.RoomMessage
	17, // 15: message.Message.authTokenMsg:type_name -> message.AuthTokenMessage
	18, // 16: message.Message.authStatusMsg:type_name -> message.AuthStatusMessage
	21, // 17: message.Message.systemMsg:type_name -> message.SystemMessage
	22, // 18: message.Message.appMsg:type_name -> message.AppMessage
	23, // 19: message.Message.resultMsg:type_name -> message.ResultMessage
	19, // 20: message.Message.ackMsg:type_name -> message.AckMessage
	24, // 21: message.Message.transMsg:type_name -> message.TransMessage
	25, // 22: message.Message.stateMsg:type_name -> message.StateMessage
	26, // 23: message.Message.modifyMsg:type_name -> message.ModifyMessage
	28, // 24: message.Message.roomModifyMsg:type_name -> message.RoomModify
	29, // 25: message.Message.pushOrderMsg:type_name -> message.PushOrderMessage
	20, // 26: message.Message.syncKeyMsg:type_name -> message.SyncKeyMessage
	2,  // 27: message.Message.registerMsg:type_name -> message.RegisterMessage
	32, // 28: message.ReceiptMessage.Relay:type_name -> message.RelayInfo
	10, // 29: message.IMMessage.RefMsg:type_name -> message.IMMessage
	14, // 30: message.OrderMessage.OrderCommand:type_name -> message.OrderCommand
	14, // 31: message.OrderSaveMessage.OrderCmd:type_name -> message.OrderCommand
	30, // 32: message.RelayMessage.MessageByPeer:type_name -> message.RelayUserInfo
	31, // 33: message.RelayMessage.MessageByGroup:type_name -> message.RelayGroupInfo
	0,  // 34: message.AppMessage.Message:type_name -> message.Message
	27, // 35: message.RoomModify.modify:type_name -> message.ModifyType
	0,  // 36: message.PushOrderMessage.message:type_name -> message.Message
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_protocol_msg_proto_init() }
func file_protocol_msg_proto_init() {
	if File_protocol_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReceiptMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetractMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSaveMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthTokenMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncKeyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomModify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushOrderMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_msg_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protocol_msg_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Message_HeartMsg)(nil),
		(*Message_LoginMsg)(nil),
		(*Message_LogoutMsg)(nil),
		(*Message_ReceiptMsg)(nil),
		(*Message_OrderReceiptMsg)(nil),
		(*Message_RetractMsg)(nil),
		(*Message_RoomMember)(nil),
		(*Message_Room)(nil),
		(*Message_ImMsg)(nil),
		(*Message_PluginMsg)(nil),
		(*Message_OrderMsg)(nil),
		(*Message_OrderSaveMsg)(nil),
		(*Message_OrderCommand)(nil),
		(*Message_RelayMsg)(nil),
		(*Message_RoomMsg)(nil),
		(*Message_AuthTokenMsg)(nil),
		(*Message_AuthStatusMsg)(nil),
		(*Message_SystemMsg)(nil),
		(*Message_AppMsg)(nil),
		(*Message_ResultMsg)(nil),
		(*Message_AckMsg)(nil),
		(*Message_TransMsg)(nil),
		(*Message_StateMsg)(nil),
		(*Message_ModifyMsg)(nil),
		(*Message_RoomModifyMsg)(nil),
		(*Message_PushOrderMsg)(nil),
		(*Message_SyncKeyMsg)(nil),
		(*Message_RegisterMsg)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_msg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocol_msg_proto_goTypes,
		DependencyIndexes: file_protocol_msg_proto_depIdxs,
		MessageInfos:      file_protocol_msg_proto_msgTypes,
	}.Build()
	File_protocol_msg_proto = out.File
	file_protocol_msg_proto_rawDesc = nil
	file_protocol_msg_proto_goTypes = nil
	file_protocol_msg_proto_depIdxs = nil
}
